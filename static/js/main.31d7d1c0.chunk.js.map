{"version":3,"sources":["assets/images/aneka-makanan.png","components/Navbar.js","components/Footer/Footer.js","components/ImageAnWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Footer","href","ImageAndWelcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","citiesDummy","Home","changeKeywordHandler","event","setState","keyword","target","getFeaturedCities","url","axios","get","headers","params","city_ids","then","data","status","featuredCities","location_suggestions","catch","err","console","log","searchHandler","state","q","citiesResultSearch","cityKeywordSearch","marginTop","this","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","getCityData","city_id","newCriteria","push","getCategoriesData","transformCategoriesData","filter","addToCriteriaHandler","splice","restaurants","entity_id","entity_type","renderRestaurantList","match","RestaurantProfile","class","featured_image","votes","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewsData","reviews","user_reviews","App","path","exact","component","Boolean","window","hostname","require","config","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31d7d1c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.87b5f04a.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\n    <Link className=\"navbar-brand\" to=\"/\">FoodParadise</Link>\n  </nav>\n)\n\nexport default Navbar","import React from 'react'\nimport './Footer.css';\n\n\nconst Footer = () => (\n  <footer className=\"my-footer\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-4 text-center\">\n          <h5>About FoodParadise</h5>\n          <ul>\n            <li><a href=\"/#\">About Us</a></li>\n            <li><a href=\"/#\">Contact Us</a></li>\n          </ul>\n        </div>\n        <div className=\"col-sm-4 text-center\">\n          <h5>Support</h5>\n          <ul>\n            <li><a href=\"/#\">FAQ</a></li>\n            <li><a href=\"/#\">Help desk</a></li>\n            <li><a href=\"/#\">Forums</a></li>\n          </ul>\n        </div>\n        <div className=\"col-sm-4 text-center\">\n          <h5>Download App</h5>\n          <ul>\n            <li><a href=\"/#\">Google Play</a></li>\n            <li><a href=\"/#\">App Store</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div className=\"social-networks\">\n      <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\n      <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\n      <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\n    </div>\n    <div className=\"text-center footer-copyright\">\n      <p>Copyright &copy; 2019 FoodParadise </p>\n    </div>\n  </footer>\n)\n\nexport default Footer","import React from 'react'\nimport mainImage from \"../assets/images/aneka-makanan.png\";\n\n\nconst ImageAndWelcome = () => (\n    <div className=\"container-fluid\">\n        <div className=\"row\" style={{ marginBottom: 30 }}>\n            <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\" ></img>\n        </div>\n        <div className=\"row\">\n            <div className=\"col\">\n                <div className=\"card text-white bg-success mb-3 text-center\">\n                    <div className=\"card-header\"><h1>Welcome to FoodParadise</h1></div>\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\n                        <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\n                        <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default ImageAndWelcome","import React from 'react'\nimport { Link } from 'react-router-dom' \n\nconst CityCard = (props) => (\n    <div className=\"col-4\">\n        <div className=\"card bg-light mb-3\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">{props.city.name}</h4>\n                <p>{props.city.country_name}</p>\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurants in {props.city.name}</Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default CityCard","import React from 'react'\nimport CityCard from './CityCard'\n\nconst CityList = (props) => (\n  <>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h3>{props.title}</h3>\n        { props.showSubtitle === true && props.subtitle !== '' && \n          <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}' </h6>\n        }\n      </div>\n    </div>\n    <div className=\"row\">\n\n      { props.cities == null ? (\n        <div className=\"col\">\n          <p>Loading . . . </p>\n        </div>\n      ) : (\n        _renderCityList(props.cities)\n      )}\n\n    </div>\n  </>\n)\n\nconst _renderCityList = (cities) => {\n  if(cities.length > 0) {\n    return (\n      cities.map(city =>\n        <CityCard key={city.id} city={city} />\n      )\n    )\n  } else {\n    return (\n      <div className=\"col\">\n        <p className=\"text-danger\">Data not found !</p>\n      </div>\n    )\n  }\n}\n\nexport default CityList","import React from 'react'\n\nconst SearchCity = (props) => (\n  <div className=\"row\" style={{ marginBottom: 30 }}>\n    <div className=\"col\">\n      <h3>Search City</h3>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"form-row\">\n            <div className=\"col-11\">\n              <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Type keyword or city name\"\n                  value={props.value}\n                  onChange={props.onChange}\n              />\n            </div>\n            <div className=\"col-1\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={props.onClickSearch}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default SearchCity","export const API = {\n  zomato: {\n    baseUrl: 'https://developers.zomato.com/api/v2.1',\n    api_key: '3d53325b6eb6a34e896a60b28f534bd6'\n  }\n}\n","import React, { Component } from 'react'\nimport ImageAndWelcome from '../components/ImageAnWelcome'\nimport CityList from '../components/CityList'\nimport SearchCity from '../components/SearchCity'\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nconst citiesDummy = [\n  { id: 74, name: 'Jakarta', country_name: 'Indonesia' },\n  { id: 11052, name: 'Bandung', country_name: 'Indonesia' },\n  { id: 170, name: 'Bali', country_name: 'Indonesia' },\n]\nclass Home extends Component {\n  constructor() {\n    super()\n    this.state = {\n      featuredCities: citiesDummy,\n      citiesResultSearch: null,\n      keyword: '',\n      cityKeywordSearch: ''\n    }\n  }\n\n  componentDidMount() {\n    // this.getFeaturedCities()\n  }\n\n  changeKeywordHandler = (event) => {\n    this.setState({ keyword: event.target.value });\n  }\n\n  getFeaturedCities = () => {\n    var url = `${API.zomato.baseUrl}/cities`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        city_ids: '74,11052,170'\n      }\n    })\n      .then(({ data }) => {\n        if (data.status === 'success') {\n          this.setState({ featuredCities: data.location_suggestions })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  searchHandler = () => {\n    let keyword = this.state.keyword\n    var url = `${API.zomato.baseUrl}/cities`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        q: keyword\n      }\n    })\n      .then(({ data }) => {\n        if (data.status === 'success') {\n          this.setState({ \n            citiesResultSearch: data.location_suggestions, \n            keyword: '',\n            cityKeywordSearch: keyword\n          })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <>\n      <ImageAndWelcome />\n      <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n        <CityList title={'Featured Cities'} cities={this.state.featuredCities} />\n\n        <SearchCity\n          value={this.state.keyword}\n          onChange={this.changeKeywordHandler}\n          onClickSearch={this.searchHandler}\n        />\n\n        {\n          this.state.cityKeywordSearch !== '' && (\n            <CityList\n              title={'Search Result'}\n              showSubtitle={true}\n              subtitle={this.state.cityKeywordSearch}\n              cities={this.state.citiesResultSearch}\n            />  \n          )\n        }  \n\n      </div>\n      </>\n    )\n  }\n}\n\nexport default Home","import React from 'react'\n\nconst CategoryList = (props) => (\n    props.categories ? (\n      <div className=\"list-group\">\n        {props.categories.map(category => (\n          <button\n            key={category.id}\n            className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}\n            onClick={() => props.categoryClickHandler(category)}\n          >\n            {category.name}\n          </button>\n        ))}\n      </div>\n    ) : (\n      <p>Loading...</p>\n    )\n)\n\nexport default CategoryList","import React from 'react'\n\nconst SearchKeyword = (props) => (\n  <>\n  <h5>Keyword</h5>\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <div className=\"form-row\">\n        <div className=\"col-10\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\n            value={props.keyword}\n            onChange={props.changeKeywordHandler}\n          />\n        </div>\n        <div className=\"col\">\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={props.onClickAddToCriteria}\n          >\n            Add to criteria\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  </>\n)\n\nexport default SearchKeyword","import React from 'react'\n\nconst SearchCriteria = (props) => (\n  <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\n    <div className=\"card-body\">\n      <p className=\"card-title\">Find Restaurants based on criteria : </p>\n      <table className=\"table table-hover\">\n        <tbody>\n          {props.criteria.map((cri, index) => (\n            <tr key={index} className=\"table-active\">\n              <td width=\"40%\">{cri.criteriaName}</td>\n              <td width=\"50%\">{cri.data.name}</td>\n              <td>\n                {cri.criteriaName !== 'City' && (\n                  <i\n                    className=\"fa fa-times\"\n                    aria-hidden=\"true\"\n                    style={{ color: 'red' }}\n                    onClick={() => props.removeCriteriaHandler(index)}\n                  >\n                  </i>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pull-right\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={props.onClickSearch}\n        >\n          Search\n        </button>\n      </div>\n\n    </div>\n  </div>\n)\n\nexport default SearchCriteria","import React from 'react'\n\nconst RatingLabel = (props) => (\n  <div className=\"btn btn-sm\"\n    style={{\n      color: 'white',\n      backgroundColor: `#${props.labelColor}`,\n      borderColor: `#${props.labelColor}`,\n    }}\n  >\n    {props.text}\n  </div>\n)\n\nexport default RatingLabel","import React from 'react'\nimport { Link } from 'react-router-dom' \nimport RatingLabel from './RatingLabel'\n\nconst RestaurantCard = (props) => (\n  <div className=\"col-6\" style={{ marginBottom: 20 }}>\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\n          </div>\n          <div className=\"col-9\">\n            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n            <h6>{props.restaurant.location.locality}</h6>\n            <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-body\">\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td>Rating</td>\n              <td>\n                <RatingLabel   \n                  labelColor={props.restaurant.user_rating.rating_color}\n                  text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Cuisines</td>\n              <td>\n                {props.restaurant.cuisines}\n              </td>\n            </tr>\n            <tr>\n              <td>Cost for two</td>\n              <td>\n                {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n      <div className=\"card-footer\">\n        <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\n          <button type=\"button\" className=\"btn btn-outline-success btn-block\">\n            View Restaurant Details\n          </button>\n        </Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default RestaurantCard\n","import React, { Component } from 'react'\n\nimport axios from 'axios'\nimport { API } from '../config/api'\nimport CategoryList from '../components/CategoryList'\nimport SearchKeyword from '../components/SearchKeyword'\nimport SearchCriteria from '../components/SearchCriteria'\nimport RestaurantCard from '../components/RestaurantCard'\n\nclass City extends Component {\n  constructor() {\n    super()\n    this.state = {\n      city: null,\n      categories: null,\n      categorySelected: null,\n      keyword: '',\n      criteria: [],\n      restaurants: []\n    }\n  }\n  \n  componentDidMount() {\n    // cara mendapatkan parameter city_id dari url / route\n    let { city_id } = this.props.match.params\n    this.getCityData(city_id)\n\n    this.getCategoriesData()\n  }\n\n  getCityData = (city_id) => {\n    let url = `${API.zomato.baseUrl}/cities`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        city_ids: `${city_id}`\n      }\n    })\n      .then(({ data }) => {\n        let city = data.location_suggestions[0]\n        let newCriteria = {\n          criteriaName: 'City',\n          data: city\n        }\n        let criteria = [...this.state.criteria]\n        criteria.push(newCriteria)\n        this.setState({ city, criteria })\n      })\n      .catch(err => console.log(err))\n  }\n\n  getCategoriesData = () => {\n    let url = `${API.zomato.baseUrl}/categories`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      }\n    })\n      .then(({ data }) => {\n        // proses transform data categories\n        let categories = this.transformCategoriesData(data.categories)\n        this.setState({ categories })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  transformCategoriesData(categories) {\n    let categoriesTransformed = categories.map(category => {\n      return category.categories\n    })\n\n    return categoriesTransformed\n  }\n\n  categoryClickHandler = (category) => {\n    let criteria = [...this.state.criteria]\n    // ambil element array selain element dengan criteriaName 'Category' \n    criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\n    let newCriteria = {\n      criteriaName: 'Category',\n      data: category\n    }\n    criteria.push(newCriteria)\n    this.setState({ categorySelected: category, criteria })\n  }\n\n  changeKeywordHandler = (event) => {\n    this.setState({ keyword: event.target.value });\n  }\n\n  addToCriteriaHandler = () => {\n    let criteria = [...this.state.criteria]\n    criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\n    let newCriteria = {\n      criteriaName: 'Keyword',\n      data: {\n        name: this.state.keyword\n      }\n    }\n\n    criteria.push(newCriteria)\n    this.setState({ keyword: '', criteria })\n  }\n\n  removeCriteriaHandler = (index) => {\n    let criteria = [...this.state.criteria]\n    criteria.splice(index, 1)\n    this.setState({ criteria })\n  }\n\n  searchHandler = () => {\n    this.setState({restaurants: null})\n    let url = `${API.zomato.baseUrl}/search`\n    let params = {}\n\n    for (let cri of this.state.criteria) {\n\n      switch (cri.criteriaName) {\n        case 'City':\n          params.entity_id = cri.data.id\n          params.entity_type = 'city'\n          break\n        case 'Category':\n          params.category = cri.data.id\n          break\n        case 'Keyword':\n          params.q = cri.data.name\n          break\n        default: break\n      }\n    }\n\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params\n    })\n      .then(({ data }) => {\n        this.setState({ restaurants: data.restaurants })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  renderRestaurantList = () => {\n    if(this.state.restaurants == null) {\n      return (\n        <div className=\"col\">\n          <p>Loading...</p> \n        </div>\n      )\n    }\n\n    if(this.state.restaurants.length > 0) {\n      return (\n        this.state.restaurants.map(({ restaurant }) => (\n          <RestaurantCard key={restaurant.id} restaurant={restaurant} />\n        ))\n      )\n    } else {\n      return (\n        <div className=\"col\">\n          <p>No Data available. Please select criteria, and click Search</p>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30 }}>\n        { this.state.city && (\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4 className=\"text-success\">\n                Restaurant in { this.state.city.name }, { this.state.city.country_name }\n              </h4>\n            </div>\n          </div>\n        )}\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <h5>Categories</h5>\n            <CategoryList \n              categories={this.state.categories}\n              categorySelected={this.state.categorySelected}\n              categoryClickHandler={(category) => this.categoryClickHandler(category)}\n            />\n          </div>\n\n          <div className=\"col\">\n            <SearchKeyword\n              keyword={this.state.keyword}\n              changeKeywordHandler={this.changeKeywordHandler}\n              onClickAddToCriteria={this.addToCriteriaHandler}\n            />\n            <SearchCriteria \n              criteria={this.state.criteria}\n              removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\n              onClickSearch={this.searchHandler}\n            />\n\n            <div className=\"row\">\n              <div className=\"col\" style={{ marginBottom: 10 }}>\n                <h4 className=\"text-success\">Restaurant List</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              { this.renderRestaurantList() }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default City","import React from 'react'\nimport RatingLabel from './RatingLabel'\n\nconst RestaurantProfile = (props) => (\n  <div className=\"card\">\n    <div className=\"card-header\">\n      <div className=\"row\">\n        <div className=\"col\">\n\n          {\n            props.restaurant ? (\n              <>\n                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n                <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\n                <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n              </>\n            ) : (\n                <p>Loading...</p>\n              )\n          }\n\n        </div>\n      </div>\n    </div>\n    <div className=\"card-body\">\n      {\n        props.restaurant ? (\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\n            </div>\n            <div className=\"col-6\">\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Rating</td>\n                    <td>\n                      <RatingLabel\n                        labelColor={props.restaurant.user_rating.rating_color}\n                        text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\n                      />\n                      <h6>{props.restaurant.user_rating.votes} Votes</h6>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Cuisines</td>\n                    <td>\n                      {props.restaurant.cuisines}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Cost for two</td>\n                    <td>\n                      {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        ) : (\n            <p>Loading...</p>\n          )\n      }\n\n\n    </div>\n  </div>\n)\n\nexport default RestaurantProfile","import React from 'react'\nimport RatingLabel from './RatingLabel'\n\nconst Review = (props) => (\n  <div className=\"card border-success\" style={{ marginBottom: 5 }}>\n    <div className=\"card-body\">\n      <div className=\"row\" style={{ marginBottom: 20 }}>\n        <div className=\"col-1\" style={{ border: '0px solid black' }}>\n          <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\n        </div>\n        <div className=\"col-11\" style={{ border: '0px solid black' }}>\n          <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\n          <RatingLabel\n            text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\n            labelColor={`${props.review.user.foodie_color}`}\n          />\n        </div>\n      </div>\n      <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\n      <RatingLabel\n        text={`${props.review.rating} (${props.review.rating_text})`}\n        labelColor={`${props.review.rating_color}`}\n      />\n      <p className=\"card-text\">{props.review.review_text}</p>\n    </div>\n  </div>\n)\n\nexport default Review","import React, { Component } from 'react'\nimport RestaurantProfile from '../components/RestaurantProfile'\nimport Review from '../components/Review'\n\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nclass RestaurantDetail extends Component {\n  constructor () {\n    super()\n    this.state = {\n      restaurant: null,\n      reviews: null\n    }\n  }\n\n  componentDidMount () {\n    let { params } = this.props.match\n    this.getRestaurantData(params.restaurant_id)\n    this.getReviewsData(params.restaurant_id)\n  }\n\n  getRestaurantData = (restaurant_id) => {\n    let url = `${API.zomato.baseUrl}/restaurant`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        res_id: restaurant_id\n      }\n    })\n      .then(({ data }) => {\n        this.setState({ restaurant: data })\n      })\n      .catch(err => console.log(err))\n  }\n\n  getReviewsData = (restaurant_id) => {\n    let url = `${API.zomato.baseUrl}/reviews`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        res_id: restaurant_id\n      }\n    })\n      .then(({ data }) => {\n        this.setState({ reviews: data.user_reviews })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n        <div className=\"row\">\n          <div className=\"col-12\" style={{ marginBottom: 20 }}>\n            <RestaurantProfile restaurant={this.state.restaurant}/>\n          </div>\n\n          <div className=\"col-12\" style={{ marginBottom: 20 }}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\n\n                {this.state.reviews ? (\n                  this.state.reviews.map(({ review }) => (\n                    <Review key={review.id} review={review} />\n                  ))\n                ) : (\n                  <p>Loading...</p>\n                )}\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RestaurantDetail","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer/Footer'\nimport Home from './pages/Home'\nimport City from './pages/City'\nimport RestaurantDetail from './pages/RestaurantDetail'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City}></Route>\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}